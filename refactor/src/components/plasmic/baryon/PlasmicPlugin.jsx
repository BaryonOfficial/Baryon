// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4dvBXLce6aZWcodsHuZ7oL
// Component: FXocl_OYx5HY
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import SiteNavBar from "../../SiteNavBar"; // plasmic-import: xamm2QscKBA7/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import Button2 from "../../Button2"; // plasmic-import: EPGJPtXx-yjL/component
import BaryonFooter from "../../BaryonFooter"; // plasmic-import: FKV3u0E4hZrB/component
import { useScreenVariants as useScreenVariantspcuqpuXkf7V2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PcuqpuXKF7v2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 4dvBXLce6aZWcodsHuZ7oL/projectcss
import sty from "./PlasmicPlugin.module.css"; // plasmic-import: FXocl_OYx5HY/css
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: nK6pvnnbOK1R/icon
import TouchDesignerBlack01SvgIcon from "./icons/PlasmicIcon__TouchDesignerBlack01Svg"; // plasmic-import: 8C7P_NC_xAYn/icon
import ResolumeLogosvgIcon from "./icons/PlasmicIcon__ResolumeLogosvg"; // plasmic-import: AvlJVplI2x17/icon
import UeLogotype2023SplashScreenVerticalBlacksvg2Icon from "./icons/PlasmicIcon__UeLogotype2023SplashScreenVerticalBlacksvg2"; // plasmic-import: GGjxGWSc9SjB/icon
import AbletonLogowinesvgIcon from "./icons/PlasmicIcon__AbletonLogowinesvg"; // plasmic-import: NQIxgI55S_TJ/icon
import OpenBroadcasterSoftwareLogowinesvgIcon from "./icons/PlasmicIcon__OpenBroadcasterSoftwareLogowinesvg"; // plasmic-import: buvdmCRySlxv/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: rIruQm-TzSjY/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: F3iOqCFKuA-k/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: IYnmkRggg6dZ/icon

createPlasmicElementProxy;

export const PlasmicPlugin__VariantProps = new Array();

export const PlasmicPlugin__ArgProps = new Array();

const $$ = {};

function PlasmicPlugin__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantspcuqpuXkf7V2()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <SiteNavBar
            data-plasmic-name={"siteNavBar"}
            data-plasmic-override={overrides.siteNavBar}
            className={classNames("__wab_instance", sty.siteNavBar)}
          />

          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___4WeKa)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__s8LAz)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uVWr)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gHqeg
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h1
                          data-plasmic-name={"h1"}
                          data-plasmic-override={overrides.h1}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{"The Plugin for "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"Creatives"}
                            </span>
                          </React.Fragment>
                        </h1>
                      }

                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qpMge
                    )}
                  >
                    {"Baryon is coming to your workflow soon... "}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___7ZQXp)}
              >
                <Embed
                  data-plasmic-name={"embedHtml"}
                  data-plasmic-override={overrides.embedHtml}
                  className={classNames("__wab_instance", sty.embedHtml)}
                  code={
                    "<script>\n  (function (s, e, n, d, er) {\n    s['Sender'] = er;\n    s[er] = s[er] || function () {\n      (s[er].q = s[er].q || []).push(arguments)\n    }, s[er].l = 1 * new Date();\n    var a = e.createElement(n),\n        m = e.getElementsByTagName(n)[0];\n    a.async = 1;\n    a.src = d;\n    m.parentNode.insertBefore(a, m)\n  })(window, document, 'script', 'https://cdn.sender.net/accounts_resources/universal.js', 'sender');\n  sender('57eb5cbf6b2688')\n</script>\n\n<div style=\"text-align: left\" class=\"sender-form-field\" data-sender-form-id=\"lx6lvr19ez582d2q6xg\"></div>"
                  }
                />
              </Stack__>
            </Stack__>
            <Stack__
              as={"section"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__xn5LY)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dLydY)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__a2G4F
                        )}
                      >
                        {"THE PLUGIN"}
                      </div>
                      <h2
                        data-plasmic-name={"h2"}
                        data-plasmic-override={overrides.h2}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2
                        )}
                      >
                        {"Make your music and sound visible."}
                      </h2>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4KU5O
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "Plug Baryon into your software tools & experience cymatics in 3D. \n\nWe created this plugin for: \n"
                            }
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"DJs"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {", "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"VJs"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {", "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"Producers"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {", "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"Artists"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {", "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"Game Developers"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {", "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"Content"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {" "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000", fontWeight: 700 }}
                          >
                            {"Creators"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {" and others."}
                          </span>
                          <React.Fragment>
                            {"\n\nCultivate your imagination."}
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </Stack__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__zvb4M)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rohVc)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n4Bl
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bKpVi
                          )}
                        >
                          {"Media server & visual software tool compatibility"}
                        </div>
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__a3Fbf)}
                          role={"img"}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bY73O
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zU9
                          )}
                        >
                          {"Instrument line-in & MIDI\nconnectivity"}
                        </div>
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__iy4MI)}
                          role={"img"}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x41Q1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8WdPg
                          )}
                        >
                          {"Latest software updates"}
                        </div>
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__cMJlW)}
                          role={"img"}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hMFvo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dJcwn
                          )}
                        >
                          {"More customization"}
                        </div>
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__hAmcQ)}
                          role={"img"}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yhHwN
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jdBtf
                          )}
                        >
                          {"Surprises"}
                        </div>
                        <Icon14Icon
                          className={classNames(projectcss.all, sty.svg__oOxl9)}
                          role={"img"}
                        />
                      </Stack__>
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7VRnK)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vZuV
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h3
                      data-plasmic-name={"h3"}
                      data-plasmic-override={overrides.h3}
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3
                      )}
                    >
                      {"Compatibility via NDI"}
                    </h3>
                  }

                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__a5S0A)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__txnHv)}>
                  <TouchDesignerBlack01SvgIcon
                    className={classNames(projectcss.all, sty.svg__jZtL)}
                    role={"img"}
                  />
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lLyhx)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__wTfh)}>
                  <ResolumeLogosvgIcon
                    className={classNames(projectcss.all, sty.svg__nh0T1)}
                    role={"img"}
                  />
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gv6F)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__kinlF)}>
                  <UeLogotype2023SplashScreenVerticalBlacksvg2Icon
                    className={classNames(projectcss.all, sty.svg__sbWtX)}
                    role={"img"}
                  />
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__uDksf)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__oNns)}>
                  <AbletonLogowinesvgIcon
                    className={classNames(projectcss.all, sty.svg__jZuAw)}
                    role={"img"}
                  />
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pMyv8)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__qLay5)}>
                  <OpenBroadcasterSoftwareLogowinesvgIcon
                    className={classNames(projectcss.all, sty.svg___9SNyg)}
                    role={"img"}
                  />
                </div>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pexYm
                )}
              >
                {"And More"}
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox___3Yz1C)}>
              <div
                className={classNames(projectcss.all, sty.freeBox___65UUt)}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"foreground3"}
                data-plasmic-override={overrides.foreground3}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground3)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yyjb6)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pZwbQ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e5Y8G
                      )}
                    >
                      {"Pricing Plan"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ns9TL
                    )}
                  >
                    {"Unlock the synergy of sound and sight"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__x8Wa2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___3BDfX)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zbWyZ)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s5Jbc
                        )}
                      >
                        {"Pro LICENSE"}
                      </div>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__unBA
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cHLlk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nKxvW
                            )}
                          >
                            {"$"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pYqfS
                            )}
                          >
                            {"150"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qShHx
                          )}
                        >
                          {"/year"}
                        </div>
                      </Stack__>
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nxR3D)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wxDo)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mtVf8
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yfo46
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nKhG6
                            )}
                          >
                            <Icon15Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lMKgz
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1B6MC
                              )}
                            >
                              <Icon15Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__v6EJt
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ls25Z
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wg2Rp
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ht4Kz
                              )}
                            >
                              {
                                "Access the full suite of audio visualization tools"
                              }
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jwd98
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bxJmp
                            )}
                          >
                            <Icon15Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hnMpb
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ghvZg
                              )}
                            >
                              <Icon15Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sbQcq
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dggS6
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dabgf
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__phyfe
                              )}
                            >
                              {
                                "Seamlessly integrate into your existing creative software"
                              }
                            </div>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3Goa1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gpKqG
                            )}
                          >
                            <Icon15Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pD60C
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pGrp9
                              )}
                            >
                              <Icon15Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___5DMz
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0DcKs
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xea8D
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jOsTu
                              )}
                            >
                              {"Priority updates and new feature releases"}
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                      <Button2
                        data-plasmic-name={"button2"}
                        data-plasmic-override={overrides.button2}
                        className={classNames("__wab_instance", sty.button2)}
                        color={"green"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dtf0T
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zahar
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vYxze
                          )}
                        >
                          {"Coming Soon"}
                        </div>
                      </Button2>
                    </Stack__>
                  </div>
                </Stack__>
              </Stack__>
            </div>
            <BaryonFooter
              data-plasmic-name={"baryonFooter"}
              data-plasmic-override={overrides.baryonFooter}
              className={classNames("__wab_instance", sty.baryonFooter)}
            />
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "siteNavBar",
    "foreground",
    "h1",
    "embedHtml",
    "section",
    "foreground2",
    "columns",
    "h2",
    "h3",
    "foreground3",
    "button2",
    "baryonFooter"
  ],

  siteNavBar: ["siteNavBar"],
  foreground: ["foreground", "h1", "embedHtml"],
  h1: ["h1"],
  embedHtml: ["embedHtml"],
  section: ["section", "foreground2", "columns", "h2"],
  foreground2: ["foreground2", "columns", "h2"],
  columns: ["columns", "h2"],
  h2: ["h2"],
  h3: ["h3"],
  foreground3: ["foreground3", "button2"],
  button2: ["button2"],
  baryonFooter: ["baryonFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPlugin__ArgProps,
          internalVariantPropNames: PlasmicPlugin__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPlugin__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPlugin";
  } else {
    func.displayName = `PlasmicPlugin.${nodeName}`;
  }
  return func;
}

export const PlasmicPlugin = Object.assign(
  // Top-level PlasmicPlugin renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    siteNavBar: makeNodeComponent("siteNavBar"),
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    embedHtml: makeNodeComponent("embedHtml"),
    section: makeNodeComponent("section"),
    foreground2: makeNodeComponent("foreground2"),
    columns: makeNodeComponent("columns"),
    h2: makeNodeComponent("h2"),
    h3: makeNodeComponent("h3"),
    foreground3: makeNodeComponent("foreground3"),
    button2: makeNodeComponent("button2"),
    baryonFooter: makeNodeComponent("baryonFooter"),
    // Metadata about props expected for PlasmicPlugin
    internalVariantProps: PlasmicPlugin__VariantProps,
    internalArgProps: PlasmicPlugin__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPlugin;
/* prettier-ignore-end */
